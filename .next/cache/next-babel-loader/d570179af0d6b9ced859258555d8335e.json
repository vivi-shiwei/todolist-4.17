{"ast":null,"code":"var _jsxFileName = \"D:\\\\todolist-4.17\\\\components\\\\Container.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { ThemeProvider, CSSReset, theme, Switch, Flex, useColorMode } from '@chakra-ui/core';\nexport const Container = props => {\n  const {\n    colorMode\n  } = useColorMode();\n  const bgColor = {\n    light: 'gray.50',\n    dark: 'gray.900'\n  };\n  const color = {\n    light: 'black',\n    dark: 'white'\n  };\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, __jsx(CSSReset, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }), __jsx(Flex // align=\"center\"\n  , {\n    direction: \"column\" // alignItems=\"center\"\n    ,\n    justifyContent: \"flex-start\",\n    bg: bgColor[colorMode],\n    color: color[colorMode],\n    p: {\n      sm: 0\n    },\n    m: {\n      sm: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, __jsx(Flex, _extends({\n    p: {\n      sm: 0,\n      md: 10\n    },\n    ml: {\n      sm: 0,\n      md: '15%'\n    },\n    mr: {\n      sm: 0,\n      md: '15%'\n    },\n    bg: bgColor[colorMode],\n    color: color[colorMode]\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }))));\n}; // export default Container\n// import { Flex, useColorMode, Box, ThemeProvider, } from '@chakra-ui/core'\n// export const Container = (props) => {\n//     const { colorMode } = useColorMode()\n//     const bgColor = { light: 'gray.50', dark: 'gray.900' }\n//     const color = { light: 'black', dark: 'white' }\n//     return (\n//         <Flex\n//             // align=\"center\"\n//             direction=\"column\"\n//             // alignItems=\"center\"\n//             justifyContent=\"flex-start\"\n//             bg={bgColor[colorMode]}\n//             color={color[colorMode]}\n//             p={{ sm: 0 }}\n//             m={{ sm: 0 }}\n//         >\n//             <Flex\n//                 p={{ sm: 0, md: 10 }}\n//                 ml={{ sm: 0, md: '15%' }}\n//                 mr={{ sm: 0, md: '15%' }}\n//                 {...props}>\n//             </Flex>\n//         </Flex>\n//     )\n// }","map":{"version":3,"sources":["D:/todolist-4.17/components/Container.js"],"names":["React","ThemeProvider","CSSReset","theme","Switch","Flex","useColorMode","Container","props","colorMode","bgColor","light","dark","color","sm","md"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,IAAjD,EAAuDC,YAAvD,QAA2E,iBAA3E;AACA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAgBH,YAAY,EAAlC;AAEA,QAAMI,OAAO,GAAG;AAAEC,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,IAAI,EAAE;AAA1B,GAAhB;AAEA,QAAMC,KAAK,GAAG;AAAEF,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAAd;AACA,SACI,MAAC,aAAD;AAAe,IAAA,KAAK,EAAET,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,IAAD,CACI;AADJ;AAEI,IAAA,SAAS,EAAC,QAFd,CAGI;AAHJ;AAII,IAAA,cAAc,EAAC,YAJnB;AAKI,IAAA,EAAE,EAAEO,OAAO,CAACD,SAAD,CALf;AAMI,IAAA,KAAK,EAAEI,KAAK,CAACJ,SAAD,CANhB;AAOI,IAAA,CAAC,EAAE;AAAEK,MAAAA,EAAE,EAAE;AAAN,KAPP;AAQI,IAAA,CAAC,EAAE;AAAEA,MAAAA,EAAE,EAAE;AAAN,KARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI,MAAC,IAAD;AACI,IAAA,CAAC,EAAE;AAAEA,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,EAAE,EAAE;AAAb,KADP;AAEI,IAAA,EAAE,EAAE;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,EAAE,EAAE;AAAb,KAFR;AAGI,IAAA,EAAE,EAAE;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,EAAE,EAAE;AAAb,KAHR;AAII,IAAA,EAAE,EAAEL,OAAO,CAACD,SAAD,CAJf;AAKI,IAAA,KAAK,EAAEI,KAAK,CAACJ,SAAD;AALhB,KAMQD,KANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVJ,CAFJ,CADJ;AAwBH,CA9BM,C,CA+BP;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\r\nimport { ThemeProvider, CSSReset, theme, Switch, Flex, useColorMode } from '@chakra-ui/core'\r\nexport const Container = (props) => {\r\n    const { colorMode } = useColorMode()\r\n\r\n    const bgColor = { light: 'gray.50', dark: 'gray.900' }\r\n\r\n    const color = { light: 'black', dark: 'white' }\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CSSReset />\r\n            <Flex\r\n                // align=\"center\"\r\n                direction=\"column\"\r\n                // alignItems=\"center\"\r\n                justifyContent=\"flex-start\"\r\n                bg={bgColor[colorMode]}\r\n                color={color[colorMode]}\r\n                p={{ sm: 0 }}\r\n                m={{ sm: 0 }}\r\n            >\r\n                <Flex\r\n                    p={{ sm: 0, md: 10 }}\r\n                    ml={{ sm: 0, md: '15%' }}\r\n                    mr={{ sm: 0, md: '15%' }}\r\n                    bg={bgColor[colorMode]}\r\n                    color={color[colorMode]}\r\n                    {...props}>\r\n                </Flex>\r\n            </Flex>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n// export default Container\r\n\r\n// import { Flex, useColorMode, Box, ThemeProvider, } from '@chakra-ui/core'\r\n\r\n// export const Container = (props) => {\r\n//     const { colorMode } = useColorMode()\r\n\r\n//     const bgColor = { light: 'gray.50', dark: 'gray.900' }\r\n\r\n//     const color = { light: 'black', dark: 'white' }\r\n//     return (\r\n//         <Flex\r\n//             // align=\"center\"\r\n//             direction=\"column\"\r\n//             // alignItems=\"center\"\r\n//             justifyContent=\"flex-start\"\r\n//             bg={bgColor[colorMode]}\r\n//             color={color[colorMode]}\r\n//             p={{ sm: 0 }}\r\n//             m={{ sm: 0 }}\r\n//         >\r\n//             <Flex\r\n//                 p={{ sm: 0, md: 10 }}\r\n//                 ml={{ sm: 0, md: '15%' }}\r\n//                 mr={{ sm: 0, md: '15%' }}\r\n//                 {...props}>\r\n//             </Flex>\r\n//         </Flex>\r\n//     )\r\n// }"]},"metadata":{},"sourceType":"module"}