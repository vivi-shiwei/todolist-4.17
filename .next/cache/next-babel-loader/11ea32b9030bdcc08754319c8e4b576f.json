{"ast":null,"code":"var _jsxFileName = \"D:\\\\todolist-4.17\\\\components\\\\Container.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Flex, useColorMode, Box, ThemeProvider } from '@chakra-ui/core';\nexport const Container = props => {\n  const {\n    colorMode\n  } = useColorMode();\n  const bgColor = {\n    light: 'gray.50',\n    dark: 'gray.900'\n  };\n  const color = {\n    light: 'black',\n    dark: 'white'\n  };\n  return __jsx(Flex // align=\"center\"\n  , {\n    direction: \"column\" // alignItems=\"center\"\n    ,\n    justifyContent: \"flex-start\",\n    bg: bgColor[colorMode],\n    color: color[colorMode],\n    p: {\n      sm: 0\n    },\n    m: {\n      sm: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, _extends({\n    p: {\n      sm: 0,\n      md: 10\n    },\n    ml: {\n      sm: 0,\n      md: '15%'\n    },\n    mr: {\n      sm: 0,\n      md: '15%'\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  })));\n};","map":{"version":3,"sources":["D:/todolist-4.17/components/Container.js"],"names":["React","Flex","useColorMode","Box","ThemeProvider","Container","props","colorMode","bgColor","light","dark","color","sm","md"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,GAA7B,EAAkCC,aAAlC,QAAwD,iBAAxD;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAgBL,YAAY,EAAlC;AAEA,QAAMM,OAAO,GAAG;AAAEC,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,IAAI,EAAE;AAA1B,GAAhB;AAEA,QAAMC,KAAK,GAAG;AAAEF,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAAd;AACA,SACI,MAAC,IAAD,CACI;AADJ;AAEI,IAAA,SAAS,EAAC,QAFd,CAGI;AAHJ;AAII,IAAA,cAAc,EAAC,YAJnB;AAKI,IAAA,EAAE,EAAEF,OAAO,CAACD,SAAD,CALf;AAMI,IAAA,KAAK,EAAEI,KAAK,CAACJ,SAAD,CANhB;AAOI,IAAA,CAAC,EAAE;AAAEK,MAAAA,EAAE,EAAE;AAAN,KAPP;AAQI,IAAA,CAAC,EAAE;AAAEA,MAAAA,EAAE,EAAE;AAAN,KARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI,MAAC,IAAD;AACI,IAAA,CAAC,EAAE;AAAEA,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,EAAE,EAAE;AAAb,KADP;AAEI,IAAA,EAAE,EAAE;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,EAAE,EAAE;AAAb,KAFR;AAGI,IAAA,EAAE,EAAE;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,EAAE,EAAE;AAAb;AAHR,KAIQP,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVJ,CADJ;AAmBH,CAzBM","sourcesContent":["import React from 'react'\r\n\r\nimport { Flex, useColorMode, Box, ThemeProvider, } from '@chakra-ui/core'\r\n\r\nexport const Container = (props) => {\r\n    const { colorMode } = useColorMode()\r\n\r\n    const bgColor = { light: 'gray.50', dark: 'gray.900' }\r\n\r\n    const color = { light: 'black', dark: 'white' }\r\n    return (\r\n        <Flex\r\n            // align=\"center\"\r\n            direction=\"column\"\r\n            // alignItems=\"center\"\r\n            justifyContent=\"flex-start\"\r\n            bg={bgColor[colorMode]}\r\n            color={color[colorMode]}\r\n            p={{ sm: 0 }}\r\n            m={{ sm: 0 }}\r\n        >\r\n            <Flex\r\n                p={{ sm: 0, md: 10 }}\r\n                ml={{ sm: 0, md: '15%' }}\r\n                mr={{ sm: 0, md: '15%' }}\r\n                {...props}>\r\n            </Flex>\r\n        </Flex>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}